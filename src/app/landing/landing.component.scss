@import "../../scss/_variables";
@import "../../scss/functions/_icon_urls";
@import "../../scss/functions/_replace";

$card-header-pixels-line-height: 24px;
$card-header-pixels-margin-bottom: 12px;
$card-header-height: $card-header-pixels-line-height +
  $card-header-pixels-margin-bottom;

$list-item-pad-height: 4px;

$boxed-width: 2.5em;

a[disabled] {
  cursor: default;
  pointer-events: none;
}

.map-help-target {
  min-width: 24em;
  max-width: 24em;
  opacity: 0;
  position: absolute;
  right: -3em;
  text-align: center;
  visibility: hidden;
  transition: opacity 0.3s linear;
  z-index: 1;

  &:hover {
    opacity: 1;
    visibility: visible;
  }

  &.help-total {
    top: -4.5em;
  }
  &.help-high_quality {
    top: -8em;
  }
  &.help-three_d {
    top: -6em;
  }
}

.map-navigation-link {
  &:not([disabled]) {
    opacity: 0.5;
    transition: opacity 0.2s linear;
    &:hover {
      opacity: 1;
    }
  }
}

.record-list:has(.map-navigation-link) {
  border-top: 0;
}

/*
.record-list:has(.map-navigation-link[disabled]) + .record-list {
  border-top: 0;
  :first-child {
    flex-grow: 0;
//    background: pink;
  }
}
*/

.app-truncate {
  overflow: hidden;
}

.app-bar-chart {
  height: 100%;
}

.container-h {
  justify-content: space-between;
}

.country-list {
  $scrollbar-width: 16px;

  margin-right: -$scrollbar-width;

  // TODO map constants.
  $map-height: 275px;
  max-height: calc($map-height - 4em);
  overflow: auto;

  & > * {
    width: calc(100% - $scrollbar-width);
  }

  &.hidden {
    position: absolute;
    visibility: hidden;
  }

  .numeric {
    margin-left: 6px;
    min-width: 6em;
  }
}

.data-link {
  color: $stats-blue;
  display: inline-block;
  font-size: 14px;
  font-weight: 600;
  margin: 14px 0 0 auto;

  &::after {
    content: " >";
  }
}

.data-rows {
  font-size: 12px;
  width: 100%;
  position: relative;
}

.data-rows-title {
  color: $gray-faint;
  font-size: 14px;
  font-weight: 600;
  padding: 9px 0 14px 0;
}

.entry-card {
  padding: 18px 12px;
  width: 100%;

  @media (min-width: $bp-desktop) {
    padding: 16px;
  }
}

.entry-card-content {
  background: $white;
  border-radius: 8px;
  display: flex;
  flex-direction: column;
  height: calc(100% - #{$card-header-height});
  justify-content: space-between;
  padding: 26px 25px 20px 25px;
}

.entry-card-header {
  align-items: center;
  display: flex;
  font-size: 12px;
  font-weight: 600;
  line-height: $card-header-pixels-line-height;
  margin-bottom: $card-header-pixels-margin-bottom;
  position: relative;
  text-transform: uppercase;

  .info-icon {
    &::after {
      background-image: svg-url-icon-spinner(#{$gray-light});
      content: "";
      position: absolute;
      width: 22px;
      height: 22px;
      opacity: 0;
      left: 0;
      top: -50%;
      transition: opacity $transition-duration ease-in-out;
    }
  }
  a.info-icon {
    &::after {
      // shorten line
      left: 18px;
    }
  }
}

.entry-card-multi {
  position: relative;
}

.entry-card-multi,
.entry-card-pair {
  width: 100%;
  @media (min-width: $bp-desktop) {
    display: flex;
    flex-direction: row;
    justify-content: space-between;

    .entry-card {
      width: 50%;
    }
  }
}

.loading .entry-card-header {
  .info-icon {
    &::after {
      opacity: 1;
    }
  }
}

.map-container {
  width: 100%;
  max-width: 100%;

  & + .data-rows {
    width: 100%;
  }
  height: 275px;
}

// for the negative z-index to work on the pseudo-element the grandparent's needs set!
:has(> .boxed) {
  z-index: 0;
}

$boxed-colour: red;
//$boxed-colour: $gray-5;
$dash-length: 2em;
$dimension-thin-line: 1px; //0.675px;

.boxed {
  display: inline-block;
  margin: 0px $dash-length;
  min-width: $boxed-width;
  position: relative;
  text-align: right;

  &::after,
  &::before {
    content: "";
    display: block;
    position: absolute;
  }

  &::before {
    background-color: $boxed-colour;
    height: $dimension-thin-line;
    left: calc(-1px - $dash-length);
    right: calc(-1px - $dash-length);
    top: 50%;
    transform: translateY(-50%);
    z-index: -1;
  }

  // add vertical line to edge of last on row
  &:last-child::after {
    background-color: $boxed-colour;
    right: calc(-1px - $dash-length);
    top: calc(-1px - $list-item-pad-height);
    bottom: calc(-1px - $list-item-pad-height);
    width: $dimension-thin-line;
  }

  &:has(.info-icon) {
    margin-left: -3.5em;
    z-index: -1;
    .info-icon {
      background-color: #fff;
      margin-left: -1.5em;
      margin-right: -1em;
    }
  }

  & > .boxed-inner {
    border: 1px solid $boxed-colour;
    background-color: $white;
    padding: 2px $list-item-pad-height;
  }
}

// top box
.record-list:has(.boxed) {
  // vertical line: connect deep downwards / stop connecting upwards
  .boxed:last-child::after {
    top: 50%;
    bottom: -3em;
  }
}

// give country link space on narrow viewports
.data-rows:has(.link-open-country) {
  padding-bottom: 4em;

  @media (min-width: $bp-desktop) {
    padding-bottom: 4em;
  }
}

// anchor country link to the bottom
.record-list:has(.link-open-country) {
  flex-grow: 1;
  position: absolute;
  bottom: 0;
  left: 0;
}

// expanded element
.target-expanded {
  :first-child.numeric {
    margin-right: 2em;
  }

  .boxed:last-child {
    padding-right: 1.5em; // match
    padding-right: 2.5em; // indent
    &::before {
      //prevent horizontal line running to the right
      right: 50%;
    }
  }
}

.target-summary {
  align-items: center;
  justify-content: flex-end;
  padding-right: 1em;

  // the last has "nothing in front of me that isn't expanded"
  &:not(:has(~ .target-summary:not(.target-expanded))) {
    // the last has nothing connected below: hide vertical line
    & ~ .target-expanded .boxed:last-child::after {
      display: none;
    }

    // the last box
    .boxed:last-child::after {
      bottom: 50%;
    }
  }
}

// country-specific numeric styling
.target-summary,
.record-list:has(.map-navigation-link) {
  .numeric {
    //border-bottom: 2px solid $gray-med;
    margin-right: 6px;
  }
}

//  experiment for further drop-down
/*
.target-expanded {

  .boxed{
    padding-bottom: 4em;

    &:last-child::before {
      top: 3em;
      right: calc(4em + 1px);
    }

    // connect vertically from inner
    .boxed-inner{
        position: relative;
        &::before {
          content: '';
          background: red;
          width: 1px;
          height: calc(1.5em - 1px);
          right: 1.5em;//calc(50% - 1.5em);
          position: absolute;
          top: 100%;
        }
    }
  }
}
*/
// end experiment for further drop-down

.record-list {
  align-items: center;
  border-top: 1px solid $gray-5;

  &:last-child {
    border-bottom: 1px solid $gray-5;
  }

  :first-child {
    flex-grow: 1;
  }
}

.record-list,
.target-summary {
  padding: $list-item-pad-height 0;
  position: relative;

  a {
    color: unset;
  }

  a.info-icon {
    cursor: help;
    margin-right: 1em;

    &:hover {
      // allow hovering over the gap!
      &::after {
        content: "";
        display: block;
        width: 3em;
        height: 4em;
        position: relative;
        transform: translate(-50%, -75%);
      }
    }
  }

  &:has(a.info-icon:hover) {
    .map-help-target {
      opacity: 1;
      visibility: visible;
    }
  }

  // TODO fade in with this?
  /*
  & > :not(.numeric) {
    visibility: hidden;
  }
  */

  .numeric {
    text-align: right;
  }

  .target-active {
    font-weight: bold;

    &.numeric {
      border-bottom: 1px solid $boxed-colour;
    }
  }
}

.map-section {
  .flag-orb {
    height: 1em;
    top: 2px;
    width: 1em;
  }

  .link-select-country,
  .link-open-country {
    color: unset;
  }

  .link-open-country {
    .flag-orb {
      margin-right: 1rem;
    }
  }

  .link-select-country {
    .flag-orb {
      opacity: 0;
      margin-left: 7px;
    }
    &:hover {
      .flag-orb {
        opacity: 1;
      }
    }
  }
}

@media (min-width: $bp-desktop) {
  .double-card .data-rows {
    margin-left: 2em;
  }

  .map-container {
    max-width: 50%;
  }

  .map-container + .data-rows {
    width: 50%;
  }
}
