@import "../../scss/_variables";

$list-item-pad-height: 4px;
$boxed-width: 2.5em;
//$boxed-colour: red;
$boxed-colour: $gray-5;
//$boxed-colour: $gray-lightest;

$boxed-dash-length: 2em;
$boxed-dash-length-less-one: 1em;

$boxed-time: 0.3s;
$numeric-min-width: 6em;

.map-navigation-link {
  white-space: nowrap;
  &:not([disabled]) {
    opacity: 0.5;
    transition: opacity 0.2s linear;
    &:hover {
      opacity: 1;
    }
  }
}

.record-list:has(.map-navigation-link) {
  border-top-color: transparent;
}

// for the negative z-index to work on the pseudo-element the grandparent's needs set!
:has(> .boxed) {
  z-index: 0;
}

.boxed {
  display: inline-block;
  margin: 0px $boxed-dash-length;
  min-width: $boxed-width;
  position: relative;
  text-align: right;
  transition: min-width linear $boxed-time;

  &::after,
  &::before {
    content: "";
    display: block;
    position: absolute;
  }

  &::before {
    background-color: $boxed-colour;
    height: 1px;
    left: calc(-1px - $boxed-dash-length);
    right: calc(-1px - $boxed-dash-length);
    top: 50%;
    transform: translateY(-50%);
    transition: left $boxed-time linear;
    z-index: -1;
  }

  // add vertical line to edge of last on row
  &:last-child::after {
    background-color: $boxed-colour;
    bottom: calc(-1px - $list-item-pad-height);
    right: calc(-1px - $boxed-dash-length);
    top: calc(-1px - $list-item-pad-height);
    width: 1px;
  }

  // force narrow box
  &:has(.info-icon) {
    margin-left: -3.5em;
    z-index: -1;
    .info-icon {
      background-color: #fff;
      margin-left: -1.5em;
      margin-right: -1em;
    }
  }

  & > .boxed-inner {
    border: 1px solid $boxed-colour;
    background-color: $white;
    padding: 2px $list-item-pad-height;
  }
}

.country-list {
  $scrollbar-width: 16px;

  margin-right: -$scrollbar-width;

  // TODO map constants.
  $map-height: 275px;
  max-height: calc($map-height - 4em);
  overflow: auto;

  & > * {
    width: calc(100% - $scrollbar-width);
  }

  &.hidden {
    position: absolute;
    visibility: hidden;
  }

  .numeric {
    $numeric-margin-left: 6px;

    margin-left: $numeric-margin-left;
    min-width: $numeric-min-width;

    &.shrink {
      @keyframes shrink {
        0% {
          min-width: calc($numeric-min-width + $numeric-margin-left);
          margin-left: $numeric-margin-left;
        }
        100% {
          min-width: 0;
          margin-left: -$numeric-margin-left;
        }
      }
      animation: shrink 1s 1;
      margin-left: -$numeric-margin-left;
      min-width: 0;
    }
  }
}

.derived-series-menu {
  position: relative;

  &.hidden {
    display: none;
  }

  a {
    color: unset;
  }
}

.derived-series-menu-inner {
  position: absolute;
  background-color: #fff;
  border: 1px solid $gray-5;
  left: 1.6em;
  padding: 4px;
  top: -0.5em;
  z-index: 1;

  display: grid;
  grid-template-columns: 1fr 1fr;
  & > span {
    grid-column: 1;
    margin-right: 1.4em;
  }
  & > a {
    grid-column: 2;
  }

  .menu-item {
    border: 3px solid transparent;
  }

  .map-series-menu-clear-link {
    grid-column-start: 1;
    grid-column-end: 3;
    text-align: center;
    margin-top: 0.4em;
  }
}

.derived-series-menu-opener {
  &.flag-orb {
    height: 1em;
    margin-left: 0.4em;
    top: 1.5px;
    width: 1em;
  }
}

// top box
.record-list:has(.boxed) {
  // vertical line: connect deep downwards / stop connecting upwards
  .boxed:last-child::after {
    top: 50%;
    bottom: -3em;
  }
}

// give country link space on narrow viewports
.data-rows:has(.link-open-country) {
  padding-bottom: 4em;

  @media (min-width: $bp-desktop) {
    padding-bottom: 4em;
  }
}

// anchor country link to the bottom
.record-list:has(.link-open-country) {
  flex-grow: 1;
  position: absolute;
  bottom: 0;
  left: 0;
}

// expand horizontal lines on the target and target years
:not(.target-expanded):has(+ .target-expanded.is-open),
.target-expanded.is-open {
  .numeric + .boxed {
    $expanded-size: 40%;
    min-width: $expanded-size;
    &:last-child {
      min-width: calc($expanded-size + $boxed-dash-length-less-one);
    }
  }
}

// expanded element
.target-expanded {
  &:not(.is-open) {
    height: 0;
    max-height: 0;
    overflow: hidden;
    padding: 0;
    .boxed:last-child::before {
      // target year horizontal line
      left: 0;
    }
  }

  // the target year
  .boxed:last-child {
    padding-right: $boxed-dash-length;
    //    margin-left: 3em;
    margin-left: calc($boxed-dash-length + 0.5em);

    &::before {
      // prevent horizontal line running to the right
      right: $boxed-dash-length;
    }
  }
}

.target-summary {
  align-items: center;
  justify-content: flex-end;
  padding-right: 1em;

  // the last has "nothing in front of me that isn't expanded"
  &:not(:has(~ .target-summary:not(.target-expanded))) {
    // the last has nothing connected below: hide vertical line
    & ~ .target-expanded .boxed:last-child::after {
      display: none;
    }

    // the last box
    .boxed:last-child::after {
      bottom: 50%;
    }
  }
}

.record-list,
.target-summary {
  padding: $list-item-pad-height 0;
  position: relative;

  a {
    color: unset;
  }

  a.info-icon {
    cursor: help;
    margin-right: 1em;

    &:hover {
      // allow hovering over the gap!
      &::after {
        content: "";
        display: block;
        width: 3em;
        height: 4em;
        position: relative;
        transform: translate(-50%, -75%);
      }
    }
  }

  &:has(a.info-icon:hover) {
    .map-help-target {
      opacity: 1;
      visibility: visible;
    }
  }

  // TODO fade in with this?

  //& > :not(.numeric) {
  //  visibility: hidden;
  //}

  .numeric {
    text-align: right;
  }

  &:not(.target-expanded) {
    .numeric {
      margin-right: 6px;
    }
  }

  .target-active {
    font-weight: bold;
    &.numeric {
      border-bottom: 1px solid $boxed-colour;
    }
  }
}
