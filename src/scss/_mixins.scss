@use "variables";
@use "sass:math";

/* MIXINS

  Convert font-size from px to rem with px fallback

  @param $size - the value in pixel you want to convert

  e.g. p {@include fontSize(12px);}
*/

/* Function for converting a px based font-size to rem. */
@function calculateRem($size) {
  $remSize: math.div($size, 16px);
  /* Default font size on html element is 100%, equivalent to 16px */
  @return #{$remSize}rem;
}

/* Mixin that will include the fall back px declaration as well as the calculated rem value. */
@mixin fontSize($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

/* Rem Unit font sizes with relative fallback http:/seesparkbox.com/foundry/scss_rem_mixin_now_with_a_better_fallback
   Usage: @include font-size(1, large);
*/
@mixin font-size($decimal-size, $keyword: null) {
  @if $keyword {
    font-size: $keyword;
  } @else {
    font-size: $decimal-size * variables.$base-font-multiplier * 16px;
  }
  font-size: $decimal-size * 1rem;
}

/* CSS Transitions
 Usage: @include transition(width,0.3s,ease-out);
*/
@mixin transition($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}
